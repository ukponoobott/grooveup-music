name: 'Groove Music Client Dev Build'

on:
  push:
    branches:
      - main
    paths:
      - 'client/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
      
jobs:
  client-build:
    name: Build and Push Client Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: List directory structure
      #   run: ls -al
      
      - name: Build Tag and push
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/groove-music-client:dev-build-${{ github.run_number }}

  wait-for-engineering-approval:
    name: Wait for Approval - Terraform Apply
    runs-on: ${{ inputs.runner }}
    needs:
      - client-build
    environment:
      name: engineering-approval
    steps:
      - name: "Wait for approval"
        run: |
          echo "Seems we've been approved."

  update-deployment:
    name: Update Deployment with Latest Build
    needs: 
      - wait-for-engineering-approval
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      # - name: "Azure OIDC login"
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.ARM_CLIENT_ID }}
      #     tenant-id: ${{ secrets.ARM_TENANT_ID }}
      #     subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Azure Login
        run: |
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }}
          az account set -s ${{ secrets.ARM_SUBSCRIPTION_ID }}
      
      - name: AZ Account Show
        run: |
          az account show
      
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.26'

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.cluster_resource_group }}
          cluster-name: ${{ secrets.cluster_name }}
          admin: 'false'
          use-kubelogin: 'true'
      
      - name: Set Deployment Image
        run: |
          kubectl set image deployment grooveup-client -n grooveup-client grooveup-client=ukponoobott/groove-music-client:dev-build-${{ github.run_number }}
